
let gameSeq = []; //flashes genrated by game
let userSeq = []; //flashes generated by user

let gameStart = false;
let level = 0;
let score = 0;
let largestScore = 0;


//Color Buttons Array
let colorBtns = ["green", "red", "yellow", "blue"];

//Level Selector
let levelIndicator = document.querySelector("h2");
//Start Game button selector
let strtBtn = document.querySelector(".strt-btn");

//start button event FOR GAME START
strtBtn.addEventListener("click", function(){
    if(gameStart == false){
        gameStart = true;
        levelUp();
    }
});

//color button flash function
function colorBtnFlash(button){ // Receiving the random button class 
    button.classList.add("btn-flash"); //adding flash CSS property
    setTimeout(function(){
        button.classList.remove("btn-flash");
    }, 400);
}

//Function for flashing all color buttons
function flashAll(score){
    let allBtns = document.querySelectorAll(".colors"); //all button selector which has class ".colors"

    //Flash all buttons after every 0.5sec
    let id = setInterval(() => { 
        for(btn of allBtns){
            colorBtnFlash(btn);
        }
    }, 500);

    //After Flashing 3 times
    setTimeout(() => {
        for(btn of allBtns){
            btn.classList.remove("btn-flash"); //remove flash CSS property
        }
        clearInterval(id); //used to stop flashing
        levelIndicator.innerHTML = `Game Over! High Score: ${score}<br>Press Start button`; // Game Over Indiacator

        //current session Highest Score
        if(score > largestScore){
            largestScore = score;
            let btmDiv = document.querySelector(".highest-score");
            
            let displayHighestScore = document.querySelector(".highest-score h2"); //Selecting h2 of Bottom div
            displayHighestScore.innerHTML = `<br>Highest Score: ${largestScore}`;
            
            btmDiv.append(displayHighestScore); //Update new highest score heading
            displayHighestScore.parentElementSibling.remove(); //removing previous Highest Score Heading
            
        }
    }, 2000);
}

//Level up function
function levelUp(){
    userSeq = []; //reset the user sequence to empty
    level++;
    score++;
    levelIndicator.innerText = `Level ${level}`; // change level no.

    let randomIndex = Math.floor(Math.random() * 4); //generating index (0-4) '4 is exclusive' of 'colorBtns' array
    let randomColor = colorBtns[randomIndex]; // Storing the random index value of 'colorBtns' array
    let randomButton = document.querySelector(`.${randomColor}`); //particular color buttons class selector
    gameSeq.push(randomColor); // pushing random color name to game sequence as game starts
    colorBtnFlash(randomButton); //passing the class to button flash function
}

// function to check color match
function chkColorMatch(index){ 
    if(userSeq[index] === gameSeq[index]){ // checking for same value as well as index
        if(userSeq.length == gameSeq.length){ // When all sequence is correctly matched
            setTimeout(levelUp, 800);
        }
    }else{
        flashAll(score); // Gameover Flash Effect
        reset(); // Reset all values
    }
}

//Btn pressed by user
function colorBtnPress(){ 
    let btn = this;
    colorBtnFlash(btn); //calls button flash function (to flash the button pressed by user)
    
    userPressColor = btn.getAttribute("id"); // getting colors class divisions Id attribute
    userSeq.push(userPressColor); //Push that id to user seq to make a track of id
    chkColorMatch(userSeq.length-1);
}

let Btns = document.querySelectorAll(".colors"); //Select all btn divisions which has class .colors
for(btn of Btns){ 
    btn.addEventListener("click", colorBtnPress);
}

// function to reset values
function reset(){
    gameSeq = [];
    userSeq = [];
    gameStart = false;
    level = 0;
    score = 0;
}

